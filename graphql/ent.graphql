"""
UserWhereInput is used for filtering User objects.
Input was generated by ent.
"""
input UserWhereInput {
  not: UserWhereInput
  and: [UserWhereInput!]
  or: [UserWhereInput!]
  
  """username field predicates"""
  username: String
  usernameNEQ: String
  usernameIn: [String!]
  usernameNotIn: [String!]
  usernameGT: String
  usernameGTE: String
  usernameLT: String
  usernameLTE: String
  usernameContains: String
  usernameHasPrefix: String
  usernameHasSuffix: String
  usernameEqualFold: String
  usernameContainsFold: String
  
  """avatar_url field predicates"""
  avatarURL: String
  avatarURLNEQ: String
  avatarURLIn: [String!]
  avatarURLNotIn: [String!]
  avatarURLGT: String
  avatarURLGTE: String
  avatarURLLT: String
  avatarURLLTE: String
  avatarURLContains: String
  avatarURLHasPrefix: String
  avatarURLHasSuffix: String
  avatarURLIsNil: Boolean
  avatarURLNotNil: Boolean
  avatarURLEqualFold: String
  avatarURLContainsFold: String
  
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  
  """discord_accounts edge predicates"""
  hasDiscordAccounts: Boolean
  hasDiscordAccountsWith: [DiscordAccountWhereInput!]
  
  """github_accounts edge predicates"""
  hasGithubAccounts: Boolean
  hasGithubAccountsWith: [GithubAccountWhereInput!]
  
  """project_contributions edge predicates"""
  hasProjectContributions: Boolean
  hasProjectContributionsWith: [ProjectContributorWhereInput!]
}

"""
DiscordAccountWhereInput is used for filtering DiscordAccount objects.
Input was generated by ent.
"""
input DiscordAccountWhereInput {
  not: DiscordAccountWhereInput
  and: [DiscordAccountWhereInput!]
  or: [DiscordAccountWhereInput!]
  
  """discord_id field predicates"""
  discordID: String
  discordIDNEQ: String
  discordIDIn: [String!]
  discordIDNotIn: [String!]
  discordIDGT: String
  discordIDGTE: String
  discordIDLT: String
  discordIDLTE: String
  discordIDContains: String
  discordIDHasPrefix: String
  discordIDHasSuffix: String
  discordIDEqualFold: String
  discordIDContainsFold: String
  
  """username field predicates"""
  username: String
  usernameNEQ: String
  usernameIn: [String!]
  usernameNotIn: [String!]
  usernameGT: String
  usernameGTE: String
  usernameLT: String
  usernameLTE: String
  usernameContains: String
  usernameHasPrefix: String
  usernameHasSuffix: String
  usernameEqualFold: String
  usernameContainsFold: String
  
  """discriminator field predicates"""
  discriminator: String
  discriminatorNEQ: String
  discriminatorIn: [String!]
  discriminatorNotIn: [String!]
  discriminatorGT: String
  discriminatorGTE: String
  discriminatorLT: String
  discriminatorLTE: String
  discriminatorContains: String
  discriminatorHasPrefix: String
  discriminatorHasSuffix: String
  discriminatorEqualFold: String
  discriminatorContainsFold: String
  
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  
  """owner edge predicates"""
  hasOwner: Boolean
  hasOwnerWith: [UserWhereInput!]
  
  """bot edge predicates"""
  hasBot: Boolean
  hasBotWith: [DiscordBotWhereInput!]
}

"""
GithubAccountWhereInput is used for filtering GithubAccount objects.
Input was generated by ent.
"""
input GithubAccountWhereInput {
  not: GithubAccountWhereInput
  and: [GithubAccountWhereInput!]
  or: [GithubAccountWhereInput!]
  
  """username field predicates"""
  username: String
  usernameNEQ: String
  usernameIn: [String!]
  usernameNotIn: [String!]
  usernameGT: String
  usernameGTE: String
  usernameLT: String
  usernameLTE: String
  usernameContains: String
  usernameHasPrefix: String
  usernameHasSuffix: String
  usernameEqualFold: String
  usernameContainsFold: String
  
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  
  """owner edge predicates"""
  hasOwner: Boolean
  hasOwnerWith: [UserWhereInput!]
  
  """organization_memberships edge predicates"""
  hasOrganizationMemberships: Boolean
  hasOrganizationMembershipsWith: [GithubOrganizationMemberWhereInput!]
  
  """repositories edge predicates"""
  hasRepositories: Boolean
  hasRepositoriesWith: [RepositoryWhereInput!]
}

"""
GithubOrganizationWhereInput is used for filtering GithubOrganization objects.
Input was generated by ent.
"""
input GithubOrganizationWhereInput {
  not: GithubOrganizationWhereInput
  and: [GithubOrganizationWhereInput!]
  or: [GithubOrganizationWhereInput!]
  
  """name field predicates"""
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  
  """display_name field predicates"""
  displayName: String
  displayNameNEQ: String
  displayNameIn: [String!]
  displayNameNotIn: [String!]
  displayNameGT: String
  displayNameGTE: String
  displayNameLT: String
  displayNameLTE: String
  displayNameContains: String
  displayNameHasPrefix: String
  displayNameHasSuffix: String
  displayNameIsNil: Boolean
  displayNameNotNil: Boolean
  displayNameEqualFold: String
  displayNameContainsFold: String
  
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  
  """members edge predicates"""
  hasMembers: Boolean
  hasMembersWith: [GithubOrganizationMemberWhereInput!]
  
  """repositories edge predicates"""
  hasRepositories: Boolean
  hasRepositoriesWith: [RepositoryWhereInput!]
}

"""
GithubOrganizationMemberWhereInput is used for filtering GithubOrganizationMember objects.
Input was generated by ent.
"""
input GithubOrganizationMemberWhereInput {
  not: GithubOrganizationMemberWhereInput
  and: [GithubOrganizationMemberWhereInput!]
  or: [GithubOrganizationMemberWhereInput!]
  
  """role field predicates"""
  role: GithubOrganizationMemberRole
  roleNEQ: GithubOrganizationMemberRole
  roleIn: [GithubOrganizationMemberRole!]
  roleNotIn: [GithubOrganizationMemberRole!]
  
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  
  """organization edge predicates"""
  hasOrganization: Boolean
  hasOrganizationWith: [GithubOrganizationWhereInput!]
  
  """account edge predicates"""
  hasAccount: Boolean
  hasAccountWith: [GithubAccountWhereInput!]
}

"""
ProjectWhereInput is used for filtering Project objects.
Input was generated by ent.
"""
input ProjectWhereInput {
  not: ProjectWhereInput
  and: [ProjectWhereInput!]
  or: [ProjectWhereInput!]
  
  """name field predicates"""
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  
  """description field predicates"""
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  
  """start_date field predicates"""
  startDate: Time
  startDateNEQ: Time
  startDateIn: [Time!]
  startDateNotIn: [Time!]
  startDateGT: Time
  startDateGTE: Time
  startDateLT: Time
  startDateLTE: Time
  
  """end_date field predicates"""
  endDate: Time
  endDateNEQ: Time
  endDateIn: [Time!]
  endDateNotIn: [Time!]
  endDateGT: Time
  endDateGTE: Time
  endDateLT: Time
  endDateLTE: Time
  endDateIsNil: Boolean
  endDateNotNil: Boolean
  
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  
  """contributors edge predicates"""
  hasContributors: Boolean
  hasContributorsWith: [ProjectContributorWhereInput!]
  
  """parent_projects edge predicates"""
  hasParentProjects: Boolean
  hasParentProjectsWith: [ProjectAssociationWhereInput!]
  
  """child_projects edge predicates"""
  hasChildProjects: Boolean
  hasChildProjectsWith: [ProjectAssociationWhereInput!]
  
  """repositories edge predicates"""
  hasRepositories: Boolean
  hasRepositoriesWith: [RepositoryWhereInput!]
  
  """discord_bots edge predicates"""
  hasDiscordBots: Boolean
  hasDiscordBotsWith: [DiscordBotWhereInput!]
  
  """sites edge predicates"""
  hasSites: Boolean
  hasSitesWith: [SiteWhereInput!]
}

"""
ProjectContributorWhereInput is used for filtering ProjectContributor objects.
Input was generated by ent.
"""
input ProjectContributorWhereInput {
  not: ProjectContributorWhereInput
  and: [ProjectContributorWhereInput!]
  or: [ProjectContributorWhereInput!]
  
  """role field predicates"""
  role: ProjectContributorRole
  roleNEQ: ProjectContributorRole
  roleIn: [ProjectContributorRole!]
  roleNotIn: [ProjectContributorRole!]
  
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  
  """project edge predicates"""
  hasProject: Boolean
  hasProjectWith: [ProjectWhereInput!]
  
  """user edge predicates"""
  hasUser: Boolean
  hasUserWith: [UserWhereInput!]
}

"""
ProjectAssociationWhereInput is used for filtering ProjectAssociation objects.
Input was generated by ent.
"""
input ProjectAssociationWhereInput {
  not: ProjectAssociationWhereInput
  and: [ProjectAssociationWhereInput!]
  or: [ProjectAssociationWhereInput!]
  
  """type field predicates"""
  type: ProjectAssociationType
  typeNEQ: ProjectAssociationType
  typeIn: [ProjectAssociationType!]
  typeNotIn: [ProjectAssociationType!]
  
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  
  """parent edge predicates"""
  hasParent: Boolean
  hasParentWith: [ProjectWhereInput!]
  
  """child edge predicates"""
  hasChild: Boolean
  hasChildWith: [ProjectWhereInput!]
}

"""
RepositoryWhereInput is used for filtering Repository objects.
Input was generated by ent.
"""
input RepositoryWhereInput {
  not: RepositoryWhereInput
  and: [RepositoryWhereInput!]
  or: [RepositoryWhereInput!]
  
  """name field predicates"""
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  
  """description field predicates"""
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  
  """project edge predicates"""
  hasProject: Boolean
  hasProjectWith: [ProjectWhereInput!]
  
  """github_account edge predicates"""
  hasGithubAccount: Boolean
  hasGithubAccountWith: [GithubAccountWhereInput!]
  
  """github_organization edge predicates"""
  hasGithubOrganization: Boolean
  hasGithubOrganizationWith: [GithubOrganizationWhereInput!]
  
  """discord_bots edge predicates"""
  hasDiscordBots: Boolean
  hasDiscordBotsWith: [DiscordBotWhereInput!]
  
  """sites edge predicates"""
  hasSites: Boolean
  hasSitesWith: [SiteWhereInput!]
}

"""
DiscordBotWhereInput is used for filtering DiscordBot objects.
Input was generated by ent.
"""
input DiscordBotWhereInput {
  not: DiscordBotWhereInput
  and: [DiscordBotWhereInput!]
  or: [DiscordBotWhereInput!]
  
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  
  """account edge predicates"""
  hasAccount: Boolean
  hasAccountWith: [DiscordAccountWhereInput!]
  
  """project edge predicates"""
  hasProject: Boolean
  hasProjectWith: [ProjectWhereInput!]
  
  """repository edge predicates"""
  hasRepository: Boolean
  hasRepositoryWith: [RepositoryWhereInput!]
}

"""
SiteWhereInput is used for filtering Site objects.
Input was generated by ent.
"""
input SiteWhereInput {
  not: SiteWhereInput
  and: [SiteWhereInput!]
  or: [SiteWhereInput!]
  
  """url field predicates"""
  url: String
  urlNEQ: String
  urlIn: [String!]
  urlNotIn: [String!]
  urlGT: String
  urlGTE: String
  urlLT: String
  urlLTE: String
  urlContains: String
  urlHasPrefix: String
  urlHasSuffix: String
  urlEqualFold: String
  urlContainsFold: String
  
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  
  """project edge predicates"""
  hasProject: Boolean
  hasProjectWith: [ProjectWhereInput!]
  
  """repository edge predicates"""
  hasRepository: Boolean
  hasRepositoryWith: [RepositoryWhereInput!]
}

"""
TechnologyWhereInput is used for filtering Technology objects.
Input was generated by ent.
"""
input TechnologyWhereInput {
  not: TechnologyWhereInput
  and: [TechnologyWhereInput!]
  or: [TechnologyWhereInput!]
  
  """name field predicates"""
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  
  """description field predicates"""
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  
  """colour field predicates"""
  colour: String
  colourNEQ: String
  colourIn: [String!]
  colourNotIn: [String!]
  colourGT: String
  colourGTE: String
  colourLT: String
  colourLTE: String
  colourContains: String
  colourHasPrefix: String
  colourHasSuffix: String
  colourIsNil: Boolean
  colourNotNil: Boolean
  colourEqualFold: String
  colourContainsFold: String
  
  """type field predicates"""
  type: TechnologyType
  typeNEQ: TechnologyType
  typeIn: [TechnologyType!]
  typeNotIn: [TechnologyType!]
  
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  
  """parent_technologies edge predicates"""
  hasParentTechnologies: Boolean
  hasParentTechnologiesWith: [TechnologyAssociationWhereInput!]
  
  """child_technologies edge predicates"""
  hasChildTechnologies: Boolean
  hasChildTechnologiesWith: [TechnologyAssociationWhereInput!]
}

"""
TechnologyAssociationWhereInput is used for filtering TechnologyAssociation objects.
Input was generated by ent.
"""
input TechnologyAssociationWhereInput {
  not: TechnologyAssociationWhereInput
  and: [TechnologyAssociationWhereInput!]
  or: [TechnologyAssociationWhereInput!]
  
  """type field predicates"""
  type: TechnologyAssociationType
  typeNEQ: TechnologyAssociationType
  typeIn: [TechnologyAssociationType!]
  typeNotIn: [TechnologyAssociationType!]
  
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  
  """parent edge predicates"""
  hasParent: Boolean
  hasParentWith: [TechnologyWhereInput!]
  
  """child edge predicates"""
  hasChild: Boolean
  hasChildWith: [TechnologyWhereInput!]
}
