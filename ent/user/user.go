// Code generated by ent, DO NOT EDIT.

package user

import (
	"entgo.io/ent"
)

const (
	// Label holds the string label denoting the user type in the database.
	Label = "user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUsername holds the string denoting the username field in the database.
	FieldUsername = "username"
	// FieldAvatarURL holds the string denoting the avatar_url field in the database.
	FieldAvatarURL = "avatar_url"
	// EdgeDiscordAccounts holds the string denoting the discord_accounts edge name in mutations.
	EdgeDiscordAccounts = "discord_accounts"
	// EdgeGithubAccounts holds the string denoting the github_accounts edge name in mutations.
	EdgeGithubAccounts = "github_accounts"
	// EdgeProjectContributions holds the string denoting the project_contributions edge name in mutations.
	EdgeProjectContributions = "project_contributions"
	// Table holds the table name of the user in the database.
	Table = "users"
	// DiscordAccountsTable is the table that holds the discord_accounts relation/edge.
	DiscordAccountsTable = "discord_accounts"
	// DiscordAccountsInverseTable is the table name for the DiscordAccount entity.
	// It exists in this package in order to avoid circular dependency with the "discordaccount" package.
	DiscordAccountsInverseTable = "discord_accounts"
	// DiscordAccountsColumn is the table column denoting the discord_accounts relation/edge.
	DiscordAccountsColumn = "user_discord_accounts"
	// GithubAccountsTable is the table that holds the github_accounts relation/edge.
	GithubAccountsTable = "github_accounts"
	// GithubAccountsInverseTable is the table name for the GithubAccount entity.
	// It exists in this package in order to avoid circular dependency with the "githubaccount" package.
	GithubAccountsInverseTable = "github_accounts"
	// GithubAccountsColumn is the table column denoting the github_accounts relation/edge.
	GithubAccountsColumn = "user_github_accounts"
	// ProjectContributionsTable is the table that holds the project_contributions relation/edge.
	ProjectContributionsTable = "project_contributors"
	// ProjectContributionsInverseTable is the table name for the ProjectContributor entity.
	// It exists in this package in order to avoid circular dependency with the "projectcontributor" package.
	ProjectContributionsInverseTable = "project_contributors"
	// ProjectContributionsColumn is the table column denoting the project_contributions relation/edge.
	ProjectContributionsColumn = "user_project_contributions"
)

// Columns holds all SQL columns for user fields.
var Columns = []string{
	FieldID,
	FieldUsername,
	FieldAvatarURL,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// Note that the variables below are initialized by the runtime
// package on the initialization of the application. Therefore,
// it should be imported in the main as follows:
//
//	import _ "github.com/fogo-sh/grackdb/ent/runtime"
var (
	Hooks  [1]ent.Hook
	Policy ent.Policy
)
